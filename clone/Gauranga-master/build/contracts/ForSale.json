{
  "contractName": "ForSale",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bicycles",
      "outputs": [
        {
          "name": "Model",
          "type": "string"
        },
        {
          "name": "Color",
          "type": "string"
        },
        {
          "name": "Owner",
          "type": "address"
        },
        {
          "name": "upvoteCount",
          "type": "uint32"
        },
        {
          "name": "downvoteCount",
          "type": "uint32"
        },
        {
          "name": "boughtAtTime",
          "type": "uint16"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "state",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerBicycleCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bicycleId",
          "type": "uint256"
        }
      ],
      "name": "upvoteBicycle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bicycleToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bicycleId",
          "type": "uint256"
        }
      ],
      "name": "downvoteBicycle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_Model",
          "type": "string"
        },
        {
          "name": "_Color",
          "type": "string"
        }
      ],
      "name": "registerBicycle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bicycleForSale",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "Model",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "Color",
          "type": "string"
        }
      ],
      "name": "NewBicycle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bicycleId",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "putForSale",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "displayBicyclesForSale",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36118cf806100cf6000396000f3fe6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806320b6f13d146100d5578063365b98b2146102795780633cd76be2146102f4578063715018a61461033957806386eb2087146103505780638da5cb5b146103b55780638f32d59b1461040c57806396a588be1461043b578063a4b23b2114610476578063b9ca9f38146104e2578063c10be00b1461055d578063c7a9493114610598578063ca6d8ee0146106f7578063f2fde38b14610746575b600080fd5b3480156100e157600080fd5b5061010e600480360360208110156100f857600080fd5b8101908080359060200190929190505050610797565b6040518080602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018863ffffffff1663ffffffff1681526020018763ffffffff1663ffffffff1681526020018661ffff1661ffff16815260200185815260200184600381111561019057fe5b60ff16815260200183810383528b818151815260200191508051906020019080838360005b838110156101d05780820151818401526020810190506101b5565b50505050905090810190601f1680156101fd5780820380516001836020036101000a031916815260200191505b5083810382528a818151815260200191508051906020019080838360005b8381101561023657808201518184015260208101905061021b565b50505050905090810190601f1680156102635780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561028557600080fd5b506102b26004803603602081101561029c57600080fd5b8101908080359060200190929190505050610979565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030057600080fd5b506103376004803603604081101561031757600080fd5b8101908080359060200190929190803590602001909291905050506109b7565b005b34801561034557600080fd5b5061034e610b0e565b005b34801561035c57600080fd5b5061039f6004803603602081101561037357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c49565b6040518082815260200191505060405180910390f35b3480156103c157600080fd5b506103ca610c61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041857600080fd5b50610421610c8a565b604051808215151515815260200191505060405180910390f35b34801561044757600080fd5b506104746004803603602081101561045e57600080fd5b8101908080359060200190929190505050610ce1565b005b34801561048257600080fd5b5061048b610f5b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104ce5780820151818401526020810190506104b3565b505050509050019250505060405180910390f35b3480156104ee57600080fd5b5061051b6004803603602081101561050557600080fd5b8101908080359060200190929190505050610fb3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056957600080fd5b506105966004803603602081101561058057600080fd5b8101908080359060200190929190505050610fe6565b005b3480156105a457600080fd5b506106f5600480360360408110156105bb57600080fd5b81019080803590602001906401000000008111156105d857600080fd5b8201836020820111156105ea57600080fd5b8035906020019184600183028401116401000000008311171561060c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561066f57600080fd5b82018360208201111561068157600080fd5b803590602001918460018302840111640100000000831117156106a357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611260565b005b34801561070357600080fd5b506107306004803603602081101561071a57600080fd5b810190808035906020019092919050505061126e565b6040518082815260200191505060405180910390f35b34801561075257600080fd5b506107956004803603602081101561076957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611291565b005b6001818154811015156107a657fe5b9060005260206000209060050201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108525780601f1061082757610100808354040283529160200191610852565b820191906000526020600020905b81548152906001019060200180831161083557829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f05780601f106108c5576101008083540402835291602001916108f0565b820191906000526020600020905b8154815290600101906020018083116108d357829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900463ffffffff16908060020160189054906101000a900463ffffffff169080600201601c9054906101000a900461ffff16908060030154908060040160009054906101000a900460ff16905088565b60048181548110151561098857fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a8d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f74206f776e6572206f662062696379636c6521000000000000000000000081525060200191505060405180910390fd5b6000600183815481101515610a9e57fe5b9060005260206000209060050201905060018160040160006101000a81548160ff02191690836003811115610acf57fe5b02179055508181600301819055506006839080600181540180825580915050906001820390600052602060002001600090919290919091505550505050565b610b16610c8a565b1515610b8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f74206f776e6572210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b80600080905060008090505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610da75782600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d8457fe5b90600052602060002001541415610d9a57610da7565b8080600101915050610ced565b50600081141515610e20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f416c726561647920726576696577207375626d6974746564210000000000000081525060200191505060405180910390fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515610ef7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f776e65722063616e206e6f742072657669657721000000000000000000000081525060200191505060405180910390fd5b6000600184815481101515610f0857fe5b9060005260206000209060050201905080600201601481819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050505050565b60606006805480602002602001604051908101604052809291908181526020018280548015610fa957602002820191906000526020600020905b815481526020019060010190808311610f95575b5050505050905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600080905060008090505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156110ac5782600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561108957fe5b9060005260206000200154141561109f576110ac565b8080600101915050610ff2565b50600081141515611125576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f416c726561647920726576696577207375626d6974746564210000000000000081525060200191505060405180910390fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156111fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f776e65722063616e206e6f742072657669657721000000000000000000000081525060200191505060405180910390fd5b600060018481548110151561120d57fe5b9060005260206000209060050201905080600201601881819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050505050565b61126a8282611319565b5050565b60068181548110151561127d57fe5b906000526020600020016000915090505481565b611299610c8a565b151561130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f74206f776e6572210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6113168161169b565b50565b6000600180610100604051908101604052808681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600081526020016000600381111561138c57fe5b8152509080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000190805190602001906113d69291906117fe565b5060208201518160010190805190602001906113f39291906117fe565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160186101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600201601c6101000a81548161ffff021916908361ffff16021790555060c0820151816003015560e08201518160040160006101000a81548160ff021916908360038111156114da57fe5b02179055505050039050336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507faa0217ba93f92c0171284bdaf11d170f0ba69ed14f4656509c31d0e71055c557818484604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156115f35780820151818401526020810190506115d8565b50505050905090810190601f1680156116205780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561165957808201518184015260208101905061163e565b50505050905090810190601f1680156116865780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611740576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6e65774f776e6572203d3d20616464726573732830290000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061183f57805160ff191683800117855561186d565b8280016001018555821561186d579182015b8281111561186c578251825591602001919060010190611851565b5b50905061187a919061187e565b5090565b6118a091905b8082111561189c576000816000905550600101611884565b5090565b9056fea165627a7a7230582025a8378350aaf20392848f332a2b6358563f6679efcebc24e2e916c816b5ba6b0029",
  "deployedBytecode": "0x6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806320b6f13d146100d5578063365b98b2146102795780633cd76be2146102f4578063715018a61461033957806386eb2087146103505780638da5cb5b146103b55780638f32d59b1461040c57806396a588be1461043b578063a4b23b2114610476578063b9ca9f38146104e2578063c10be00b1461055d578063c7a9493114610598578063ca6d8ee0146106f7578063f2fde38b14610746575b600080fd5b3480156100e157600080fd5b5061010e600480360360208110156100f857600080fd5b8101908080359060200190929190505050610797565b6040518080602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018863ffffffff1663ffffffff1681526020018763ffffffff1663ffffffff1681526020018661ffff1661ffff16815260200185815260200184600381111561019057fe5b60ff16815260200183810383528b818151815260200191508051906020019080838360005b838110156101d05780820151818401526020810190506101b5565b50505050905090810190601f1680156101fd5780820380516001836020036101000a031916815260200191505b5083810382528a818151815260200191508051906020019080838360005b8381101561023657808201518184015260208101905061021b565b50505050905090810190601f1680156102635780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561028557600080fd5b506102b26004803603602081101561029c57600080fd5b8101908080359060200190929190505050610979565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030057600080fd5b506103376004803603604081101561031757600080fd5b8101908080359060200190929190803590602001909291905050506109b7565b005b34801561034557600080fd5b5061034e610b0e565b005b34801561035c57600080fd5b5061039f6004803603602081101561037357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c49565b6040518082815260200191505060405180910390f35b3480156103c157600080fd5b506103ca610c61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041857600080fd5b50610421610c8a565b604051808215151515815260200191505060405180910390f35b34801561044757600080fd5b506104746004803603602081101561045e57600080fd5b8101908080359060200190929190505050610ce1565b005b34801561048257600080fd5b5061048b610f5b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104ce5780820151818401526020810190506104b3565b505050509050019250505060405180910390f35b3480156104ee57600080fd5b5061051b6004803603602081101561050557600080fd5b8101908080359060200190929190505050610fb3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056957600080fd5b506105966004803603602081101561058057600080fd5b8101908080359060200190929190505050610fe6565b005b3480156105a457600080fd5b506106f5600480360360408110156105bb57600080fd5b81019080803590602001906401000000008111156105d857600080fd5b8201836020820111156105ea57600080fd5b8035906020019184600183028401116401000000008311171561060c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561066f57600080fd5b82018360208201111561068157600080fd5b803590602001918460018302840111640100000000831117156106a357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611260565b005b34801561070357600080fd5b506107306004803603602081101561071a57600080fd5b810190808035906020019092919050505061126e565b6040518082815260200191505060405180910390f35b34801561075257600080fd5b506107956004803603602081101561076957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611291565b005b6001818154811015156107a657fe5b9060005260206000209060050201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108525780601f1061082757610100808354040283529160200191610852565b820191906000526020600020905b81548152906001019060200180831161083557829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f05780601f106108c5576101008083540402835291602001916108f0565b820191906000526020600020905b8154815290600101906020018083116108d357829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900463ffffffff16908060020160189054906101000a900463ffffffff169080600201601c9054906101000a900461ffff16908060030154908060040160009054906101000a900460ff16905088565b60048181548110151561098857fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a8d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f74206f776e6572206f662062696379636c6521000000000000000000000081525060200191505060405180910390fd5b6000600183815481101515610a9e57fe5b9060005260206000209060050201905060018160040160006101000a81548160ff02191690836003811115610acf57fe5b02179055508181600301819055506006839080600181540180825580915050906001820390600052602060002001600090919290919091505550505050565b610b16610c8a565b1515610b8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f74206f776e6572210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b80600080905060008090505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610da75782600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d8457fe5b90600052602060002001541415610d9a57610da7565b8080600101915050610ced565b50600081141515610e20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f416c726561647920726576696577207375626d6974746564210000000000000081525060200191505060405180910390fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515610ef7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f776e65722063616e206e6f742072657669657721000000000000000000000081525060200191505060405180910390fd5b6000600184815481101515610f0857fe5b9060005260206000209060050201905080600201601481819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050505050565b60606006805480602002602001604051908101604052809291908181526020018280548015610fa957602002820191906000526020600020905b815481526020019060010190808311610f95575b5050505050905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600080905060008090505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156110ac5782600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561108957fe5b9060005260206000200154141561109f576110ac565b8080600101915050610ff2565b50600081141515611125576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f416c726561647920726576696577207375626d6974746564210000000000000081525060200191505060405180910390fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156111fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f776e65722063616e206e6f742072657669657721000000000000000000000081525060200191505060405180910390fd5b600060018481548110151561120d57fe5b9060005260206000209060050201905080600201601881819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050505050565b61126a8282611319565b5050565b60068181548110151561127d57fe5b906000526020600020016000915090505481565b611299610c8a565b151561130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f74206f776e6572210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6113168161169b565b50565b6000600180610100604051908101604052808681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600081526020016000600381111561138c57fe5b8152509080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000190805190602001906113d69291906117fe565b5060208201518160010190805190602001906113f39291906117fe565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160186101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600201601c6101000a81548161ffff021916908361ffff16021790555060c0820151816003015560e08201518160040160006101000a81548160ff021916908360038111156114da57fe5b02179055505050039050336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507faa0217ba93f92c0171284bdaf11d170f0ba69ed14f4656509c31d0e71055c557818484604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156115f35780820151818401526020810190506115d8565b50505050905090810190601f1680156116205780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561165957808201518184015260208101905061163e565b50505050905090810190601f1680156116865780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611740576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6e65774f776e6572203d3d20616464726573732830290000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061183f57805160ff191683800117855561186d565b8280016001018555821561186d579182015b8281111561186c578251825591602001919060010190611851565b5b50905061187a919061187e565b5090565b6118a091905b8082111561189c576000816000905550600101611884565b5090565b9056fea165627a7a7230582025a8378350aaf20392848f332a2b6358563f6679efcebc24e2e916c816b5ba6b0029",
  "sourceMap": "72:660:2:-;;;522:10:6;513:6;;:19;;;;;;;;;;;;;;;;;;580:6;;;;;;;;;;;547:40;;576:1;547:40;;;;;;;;;;;;72:660:2;;;;;;",
  "deployedSourceMap": "72:660:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:25:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;444:25:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;444:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;444:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;444:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1044:22:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1044:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;206:407:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;206:407:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;206:407:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1316:137:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1316:137:6;;;;;;528:49:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;528:49:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;528:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:76:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;649:76:6;;;;;;;;;;;;;;;;;;;;;;;;;;;966:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;966:89:6;;;;;;;;;;;;;;;;;;;;;;;;;;;549:259:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;549:259:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;549:259:5;;;;;;;;;;;;;;;;;;;;619:109:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;619:109:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;619:109:2;;;;;;;;;;;;;;;;;476:46:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;476:46:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;476:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:276:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;814:276:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;814:276:5;;;;;;;;;;;;;;;;;;;;912:125:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;912:125:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;912:125:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;912:125:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;912:125:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;912:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;912:125:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;912:125:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;912:125:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;912:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;912:125:0;;;;;;;;;;;;;;;;;;171:28:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;171:28:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;171:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:107:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1613:107:6;;;;;;;;;;;;;;;;;;;;;;444:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1044:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;206:407:2:-;295:14;:26;310:10;295:26;;;;;;;;;;;;;;;;;;;;;281:40;;:10;:40;;;273:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;357:25;385:8;394:10;385:20;;;;;;;;;;;;;;;;;;;;357:48;;433:13;415:9;:15;;;:31;;;;;;;;;;;;;;;;;;;;;;;;474:6;456:9;:15;;:24;;;;490:14;510:10;490:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;490:31:2;;;;;;;;;;;;;;;;;;;;;;206:407;;;:::o;1316:137:6:-;844:9;:7;:9::i;:::-;836:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:1;1377:40;;1398:6;;;;;;;;;;;1377:40;;;;;;;;;;;;1444:1;1427:6;;:19;;;;;;;;;;;;;;;;;;1316:137::o;528:49:0:-;;;;;;;;;;;;;;;;;:::o;649:76:6:-;686:7;712:6;;;;;;;;;;;705:13;;649:76;:::o;966:89::-;1005:4;1042:6;;;;;;;;;;;1028:20;;:10;:20;;;1021:27;;966:89;:::o;549:259:5:-;608:10;243:9;255:1;243:13;;270:6;279:1;270:10;;266:203;286:17;:29;304:10;286:29;;;;;;;;;;;;;;;:36;;;;282:1;:40;266:203;;;382:10;346:17;:29;364:10;346:29;;;;;;;;;;;;;;;376:1;346:32;;;;;;;;;;;;;;;;;;:46;343:116;;;439:5;;343:116;324:3;;;;;;;266:203;;;;494:1;486:4;:9;478:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;652:14;:26;667:10;652:26;;;;;;;;;;;;;;;;;;;;;638:40;;:10;:40;;;;630:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;716:27;746:8;755:10;746:20;;;;;;;;;;;;;;;;;;;;716:50;;776:11;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:1;549:259;;;:::o;619:109:2:-;675:13;707:14;700:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;619:109;:::o;476:46:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;814:276:5:-;875:10;243:9;255:1;243:13;;270:6;279:1;270:10;;266:203;286:17;:29;304:10;286:29;;;;;;;;;;;;;;;:36;;;;282:1;:40;266:203;;;382:10;346:17;:29;364:10;346:29;;;;;;;;;;;;;;;376:1;346:32;;;;;;;;;;;;;;;;;;:46;343:116;;;439:5;;343:116;324:3;;;;;;;266:203;;;;494:1;486:4;:9;478:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:14;:26;947:10;932:26;;;;;;;;;;;;;;;;;;;;;918:40;;:10;:40;;;;910:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;996:27;1026:8;1035:10;1026:20;;;;;;;;;;;;;;;;;;;;996:50;;1056:11;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:1;814:276;;;:::o;912:125:0:-;998:32;1015:6;1023;998:16;:32::i;:::-;912:125;;:::o;171:28:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1613:107:6:-;844:9;:7;:9::i;:::-;836:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1685:28;1704:8;1685:18;:28::i;:::-;1613:107;:::o;589:317:0:-;677:7;770:1;687:8;701:65;;;;;;;;;709:6;701:65;;;;717:6;701:65;;;;725:10;701:65;;;;;;737:1;701:65;;;;;;740:1;701:65;;;;;;743:1;701:65;;;;;;746:1;701:65;;;;749:16;701:65;;;;;;;;;;;687:80;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;687:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:84;677:94;;803:10;782:14;:18;797:2;782:18;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;823:17;:29;841:10;823:29;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;869:30;880:2;884:6;892;869:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;869:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;869:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:317;;;:::o;1853:209:6:-;1946:1;1926:22;;:8;:22;;;;1918:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2019:8;1990:38;;2011:6;;;;;;;;;;;1990:38;;;;;;;;;;;;2047:8;2038:6;;:17;;;;;;;;;;;;;;;;;;1853:209;:::o;72:660:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./metrobikitrade.sol\";               \n\ncontract ForSale is Review {\n\n    //event NewBicycleForSale(_bicycleId, Model, Color, Price);\n\n    uint[] public bicycleForSale;\n\n    function putForSale(uint _bicycleId, uint _price) public {\n        require(msg.sender == bicycleToOwner[_bicycleId], \"Not owner of bicycle!\");\n        Bicycle storage myBicycle = bicycles[_bicycleId];\n        myBicycle.state = State.FORSALE;\n        myBicycle.price = _price;\n        bicycleForSale.push(_bicycleId);\n        //emit NewBicycleForSale(myBicycle.Model, myBicycle.Color, myBicycle.price);\n    }\n\n    function displayBicyclesForSale() external view returns(uint[] memory) {\n        return bicycleForSale;\n    }\n\n\n}",
  "sourcePath": "/home/anshu1/dapps/MetroBiki/contracts/biketrade01.sol",
  "ast": {
    "absolutePath": "/home/anshu1/dapps/MetroBiki/contracts/biketrade01.sol",
    "exportedSymbols": {
      "ForSale": [
        229
      ]
    },
    "id": 230,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 170,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/anshu1/dapps/MetroBiki/contracts/metrobikitrade.sol",
        "file": "./metrobikitrade.sol",
        "id": 171,
        "nodeType": "ImportDirective",
        "scope": 230,
        "sourceUnit": 455,
        "src": "25:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 172,
              "name": "Review",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 454,
              "src": "92:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Review_$454",
                "typeString": "contract Review"
              }
            },
            "id": 173,
            "nodeType": "InheritanceSpecifier",
            "src": "92:6:2"
          }
        ],
        "contractDependencies": [
          111,
          454,
          565
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 229,
        "linearizedBaseContracts": [
          229,
          454,
          111,
          565
        ],
        "name": "ForSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 176,
            "name": "bicycleForSale",
            "nodeType": "VariableDeclaration",
            "scope": 229,
            "src": "171:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 174,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "171:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 175,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "171:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "263:350:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "281:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "281:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "bicycleToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "295:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 188,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "_bicycleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "310:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "295:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "281:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f74206f776e6572206f662062696379636c6521",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "323:23:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7a62bdcc14f1f259f0f4596f1b1024639ce627e66e7bb2345636ed9aec0703d",
                          "typeString": "literal_string \"Not owner of bicycle!\""
                        },
                        "value": "Not owner of bicycle!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7a62bdcc14f1f259f0f4596f1b1024639ce627e66e7bb2345636ed9aec0703d",
                          "typeString": "literal_string \"Not owner of bicycle!\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        597,
                        598
                      ],
                      "referencedDeclaration": 598,
                      "src": "273:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "273:74:2"
                },
                {
                  "assignments": [
                    194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 194,
                      "name": "myBicycle",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "357:25:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bicycle_$36_storage_ptr",
                        "typeString": "struct BicycleRegister.Bicycle"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 193,
                        "name": "Bicycle",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 36,
                        "src": "357:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bicycle_$36_storage_ptr",
                          "typeString": "struct BicycleRegister.Bicycle"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "bicycles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "385:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Bicycle_$36_storage_$dyn_storage",
                        "typeString": "struct BicycleRegister.Bicycle storage ref[] storage ref"
                      }
                    },
                    "id": 197,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 196,
                      "name": "_bicycleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "394:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "385:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bicycle_$36_storage",
                      "typeString": "struct BicycleRegister.Bicycle storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "357:48:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "myBicycle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "415:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bicycle_$36_storage_ptr",
                          "typeString": "struct BicycleRegister.Bicycle storage pointer"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "415:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$17",
                        "typeString": "enum BicycleRegister.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "433:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$17_$",
                          "typeString": "type(enum BicycleRegister.State)"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FORSALE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "433:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$17",
                        "typeString": "enum BicycleRegister.State"
                      }
                    },
                    "src": "415:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$17",
                      "typeString": "enum BicycleRegister.State"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "415:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 206,
                        "name": "myBicycle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "456:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bicycle_$36_storage_ptr",
                          "typeString": "struct BicycleRegister.Bicycle storage pointer"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "456:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "474:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "456:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "456:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "_bicycleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "510:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 212,
                        "name": "bicycleForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "490:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "490:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "490:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "putForSale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "name": "_bicycleId",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "226:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "243:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:30:2"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:0:2"
            },
            "scope": 229,
            "src": "206:407:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "690:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 225,
                    "name": "bicycleForSale",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 176,
                    "src": "707:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 224,
                  "id": 226,
                  "nodeType": "Return",
                  "src": "700:21:2"
                }
              ]
            },
            "documentation": null,
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "displayBicyclesForSale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:2:2"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "675:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 221,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "675:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 222,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "675:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "674:15:2"
            },
            "scope": 229,
            "src": "619:109:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 230,
        "src": "72:660:2"
      }
    ],
    "src": "0:732:2"
  },
  "legacyAST": {
    "absolutePath": "/home/anshu1/dapps/MetroBiki/contracts/biketrade01.sol",
    "exportedSymbols": {
      "ForSale": [
        229
      ]
    },
    "id": 230,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 170,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/anshu1/dapps/MetroBiki/contracts/metrobikitrade.sol",
        "file": "./metrobikitrade.sol",
        "id": 171,
        "nodeType": "ImportDirective",
        "scope": 230,
        "sourceUnit": 455,
        "src": "25:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 172,
              "name": "Review",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 454,
              "src": "92:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Review_$454",
                "typeString": "contract Review"
              }
            },
            "id": 173,
            "nodeType": "InheritanceSpecifier",
            "src": "92:6:2"
          }
        ],
        "contractDependencies": [
          111,
          454,
          565
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 229,
        "linearizedBaseContracts": [
          229,
          454,
          111,
          565
        ],
        "name": "ForSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 176,
            "name": "bicycleForSale",
            "nodeType": "VariableDeclaration",
            "scope": 229,
            "src": "171:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 174,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "171:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 175,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "171:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "263:350:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 184,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "281:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "281:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "bicycleToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "295:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 188,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "_bicycleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "310:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "295:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "281:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f74206f776e6572206f662062696379636c6521",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "323:23:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7a62bdcc14f1f259f0f4596f1b1024639ce627e66e7bb2345636ed9aec0703d",
                          "typeString": "literal_string \"Not owner of bicycle!\""
                        },
                        "value": "Not owner of bicycle!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7a62bdcc14f1f259f0f4596f1b1024639ce627e66e7bb2345636ed9aec0703d",
                          "typeString": "literal_string \"Not owner of bicycle!\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        597,
                        598
                      ],
                      "referencedDeclaration": 598,
                      "src": "273:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "273:74:2"
                },
                {
                  "assignments": [
                    194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 194,
                      "name": "myBicycle",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "357:25:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bicycle_$36_storage_ptr",
                        "typeString": "struct BicycleRegister.Bicycle"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 193,
                        "name": "Bicycle",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 36,
                        "src": "357:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bicycle_$36_storage_ptr",
                          "typeString": "struct BicycleRegister.Bicycle"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "bicycles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "385:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Bicycle_$36_storage_$dyn_storage",
                        "typeString": "struct BicycleRegister.Bicycle storage ref[] storage ref"
                      }
                    },
                    "id": 197,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 196,
                      "name": "_bicycleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "394:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "385:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bicycle_$36_storage",
                      "typeString": "struct BicycleRegister.Bicycle storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "357:48:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "myBicycle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "415:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bicycle_$36_storage_ptr",
                          "typeString": "struct BicycleRegister.Bicycle storage pointer"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "415:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$17",
                        "typeString": "enum BicycleRegister.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "433:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$17_$",
                          "typeString": "type(enum BicycleRegister.State)"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FORSALE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "433:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$17",
                        "typeString": "enum BicycleRegister.State"
                      }
                    },
                    "src": "415:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$17",
                      "typeString": "enum BicycleRegister.State"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "415:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 206,
                        "name": "myBicycle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "456:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bicycle_$36_storage_ptr",
                          "typeString": "struct BicycleRegister.Bicycle storage pointer"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "456:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "474:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "456:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "456:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "_bicycleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "510:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 212,
                        "name": "bicycleForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "490:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "490:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "490:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "putForSale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "name": "_bicycleId",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "226:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "243:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:30:2"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:0:2"
            },
            "scope": 229,
            "src": "206:407:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "690:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 225,
                    "name": "bicycleForSale",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 176,
                    "src": "707:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 224,
                  "id": 226,
                  "nodeType": "Return",
                  "src": "700:21:2"
                }
              ]
            },
            "documentation": null,
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "displayBicyclesForSale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:2:2"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "675:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 221,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "675:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 222,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "675:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "674:15:2"
            },
            "scope": 229,
            "src": "619:109:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 230,
        "src": "72:660:2"
      }
    ],
    "src": "0:732:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-03-16T13:04:57.296Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}